name: Release

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.0.1
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        env:
          PUPPETEER_SKIP_DOWNLOAD: true

      - name: Run tests
        run: npm test

      - name: Build
        run: npm run build

      - name: Create distribution archive
        run: tar czf qrtak-dist.tgz dist

      - name: Install semantic-release plugins
        run: |
          npm install --save-dev \
            @semantic-release/changelog \
            @semantic-release/git \
            @semantic-release/github \
            @semantic-release/npm \
            @semantic-release/commit-analyzer \
            @semantic-release/release-notes-generator

      - name: Semantic Release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: github-actions[bot]
          GIT_AUTHOR_EMAIL: github-actions[bot]@users.noreply.github.com
          GIT_COMMITTER_NAME: github-actions[bot]
          GIT_COMMITTER_EMAIL: github-actions[bot]@users.noreply.github.com
        run: |
          # Note: This requires either:
          # 1. A PAT with bypass branch protection permissions (secrets.RELEASE_TOKEN)
          # 2. Or temporarily disable "Include administrators" in branch protection
          # 3. Or add github-actions[bot] to bypass list in branch protection
          npx semantic-release

      # Sign artifacts if release was created
      - name: Install cosign
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2

      - name: Sign artifact
        if: steps.semantic.outputs.new_release_published == 'true'
        run: cosign sign-blob --yes --output-signature qrtak-dist.tgz.sig qrtak-dist.tgz

      - name: Upload release assets
        if: steps.semantic.outputs.new_release_published == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload v${{ steps.semantic.outputs.new_release_version }} \
            qrtak-dist.tgz \
            qrtak-dist.tgz.sig \
            --clobber

  # Trigger Docker build if release was created
  docker:
    name: Trigger Docker Build
    needs: release
    if: needs.release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Docker workflow
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'release-docker.yml',
              ref: 'main',
              inputs: {
                version: '${{ needs.release.outputs.new_release_version }}'
              }
            });