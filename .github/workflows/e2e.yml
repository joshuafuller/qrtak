name: E2E Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ "**" ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'tests/**'
      - 'playwright.config.js'
      - 'package.json'
      - 'package-lock.json'
      - 'Dockerfile'
      - 'vite.config.js'
      - 'index.html'
      - '.github/workflows/e2e.yml'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - run: npm run lint

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - run: npm run build

  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [lint, build]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Docker image
        run: docker build -t qrtak:ci .

      - name: Run container
        run: |
          docker run -d --name qrtak-ci -p 8080:80 qrtak:ci

      - name: Wait for service to be healthy
        run: |
          for i in {1..60}; do
            if curl -fsS http://localhost:8080/ >/dev/null; then echo "Service up"; exit 0; fi
            sleep 2
          done
          echo "Service failed to start"; docker logs qrtak-ci || true; exit 1

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        env:
          BASE_URL: http://localhost:8080
        run: npm run e2e

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 7

      - name: Show container logs on failure
        if: failure()
        run: docker logs qrtak-ci || true

      - name: Cleanup
        if: always()
        run: |
          docker rm -f qrtak-ci || true
